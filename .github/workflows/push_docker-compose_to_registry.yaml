name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Install Docker Compose
        run: |
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and Push Docker Images with Docker Compose
        run: |
          docker-compose build
          docker-compose push

  deploy:
    runs-on: ubuntu-latest
    needs: build # Ensure this job runs after the build job

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to AWS EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST_DNS: ${{ secrets.HOST_DNS }}
          HOST_USER: ${{ secrets.HOST_USER }}
          REMOTE_TARGET_DIRECTORY: ${{ secrets.REMOTE_TARGET_DIRECTORY }}
        run: |
          # Install SSH client
          sudo apt-get update
          sudo apt-get install -y openssh-client

          # Add SSH key to the agent
          eval "$(ssh-agent -s)"
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

          # Connect to the EC2 instance and pull the latest images and restart containers
          ssh -o StrictHostKeyChecking=no $HOST_USER@$HOST_DNS << 'EOF'
            # Navigate to the target directory
            cd $REMOTE_TARGET_DIRECTORY

            # Pull the latest images
            docker-compose pull

            # Restart the services
            docker-compose up -d --remove-orphans
          EOF
