name: Build and Deploy Dockerized Laravel App

# Trigger on push to main or master branches
on:
  push:
    branches:
      - main
jobs:
  build:
    name: 'Build Docker Image'
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: 'Checkout the code'
        uses: actions/checkout@v2


      - name: 'Login to DockerHub'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 'Install Docker Compose'
        run: |
          sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m) -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # Step 3: Build and push the Docker images to the registry
      - name: 'Build and Push Docker Images'
        run: |
          docker-compose -f docker-compose.yaml build
          docker tag laravel_eleven_app_image ${{ secrets.DOCKER_REGISTRY }}/laravel_eleven_app_image:latest
          docker push ${{ secrets.DOCKER_REGISTRY }}/laravel_eleven_app_image:latest
          
          docker tag nginx:alpine ${{ secrets.DOCKER_REGISTRY }}/nginx:alpine
          docker push ${{ secrets.DOCKER_REGISTRY }}/nginx:alpine
          
          docker tag mysql:5.7.22 ${{ secrets.DOCKER_REGISTRY }}/mysql:5.7.22
          docker push ${{ secrets.DOCKER_REGISTRY }}/mysql:5.7.22
          
          docker tag phpmyadmin:5.2.1-apache ${{ secrets.DOCKER_REGISTRY }}/phpmyadmin:5.2.1-apache
          docker push ${{ secrets.DOCKER_REGISTRY }}/phpmyadmin:5.2.1-apache
          
          docker tag redis:7.2-alpine ${{ secrets.DOCKER_REGISTRY }}/redis:7.2-alpine
          docker push ${{ secrets.DOCKER_REGISTRY }}/redis:7.2-alpine

  deploy:
    name: 'Deploy Docker Images to AWS EC2'
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Checkout the code (if needed)
      - name: 'Checkout the code'
        uses: actions/checkout@v2

      # Step 2: SSH into the EC2 server and pull/run the images
      - name: 'Deploy to AWS EC2 using SSH'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Pull the latest images from the Docker registry
            docker pull ${{ secrets.DOCKER_REGISTRY }}/laravel_eleven_app_image:latest
            docker pull ${{ secrets.DOCKER_REGISTRY }}/nginx:alpine
            docker pull ${{ secrets.DOCKER_REGISTRY }}/mysql:5.7.22
            docker pull ${{ secrets.DOCKER_REGISTRY }}/phpmyadmin:5.2.1-apache
            docker pull ${{ secrets.DOCKER_REGISTRY }}/redis:7.2-alpine

            # Navigate to the directory with the docker-compose.yaml file
            cd ${{ secrets.REMOTE_TARGET_DIRECTORY }}

            # Bring down any old containers and run the new ones
            docker-compose down
            docker-compose up -d