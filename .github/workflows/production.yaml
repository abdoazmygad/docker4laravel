name: Push To main/master Branches

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: 'Deploy To Production Server (AWS EC2)'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout the files'
        uses: actions/checkout@v2

      # Deploy code to AWS EC2 using Rsync
      - name: 'Deploy to AWS EC2 server using SSH'
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          REMOTE_HOST:  ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.HOST_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET_DIRECTORY }}

      # Ensure Docker Compose is installed on the EC2 instance
      - name: 'Install Docker Compose'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d'"' -f4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose --version

      # Pull latest code and prepare the environment
      - name: 'Executing remote ssh commands using ssh key'
        uses: appleboy/ssh-action@master
        with:
          host:  ${{ secrets.HOST_DNS }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script:  |
            cd ${{ secrets.REMOTE_TARGET_DIRECTORY }}
            git pull origin main

      # Build and run Docker services using Docker Compose
      - name: 'Build & run services through docker-compose'
        uses: appleboy/ssh-action@master
        with:
          host:  ${{ secrets.HOST_DNS }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script:  |
            cd ${{ secrets.REMOTE_TARGET_DIRECTORY }}
            docker-compose up -d --build --force-recreate
